{"version":3,"sources":["api/axiosClient.js","api/userApi.js","redux/loginSlice.js","redux/actions/userLogin.js","utils/localStorageHandle.js","features/Auth/component/FormLogin/index.jsx","features/Auth/page/Login/index.jsx","components/NotFound/index.jsx","App.js","app/store.js","index.js"],"names":["axiosClient","axios","create","baseURL","interceptors","request","use","config","error","Promise","reject","response","data","userApi","login","post","getUser","token","get","headers","Authorization","loginSlice","createSlice","name","initialState","isLoading","isAuth","access_token","reducers","loginProcess","state","loginSuccess","payload","loginFail","reducer","actions","userLogin","dispatch","then","res","console","log","localStorage","setItem","window","location","catch","err","FormLogin","useDispatch","localRmb","getItem","localEmp","localPass","atob","initialValues","remember_me","username","password","rules","required","whitespace","message","useSelector","labelCol","span","wrapperCol","onFinish","values","btoa","autoComplete","Item","label","Password","type","valuePropName","offset","checked","htmlType","Login","props","className","justify","xl","NotFound","App","path","component","exact","require","configureStore","rootReducer","combineReducers","loginReducer","middleware","thunk","store","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeb63367.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst axiosClient = axios.create({\n    baseURL: 'https://fakestoreapi.com/',\n    // header: {\n    //     'Content-Type': 'application/json',\n    // }\n});\n\n// Interceptor\n// Add a request interceptor\naxiosClient.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n}, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n});\n\n// Add a response interceptor\naxiosClient.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response.data;\n}, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n});\n\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\n\nconst userApi = {\n    // register(data) {\n    //     const url = `auth/users`;\n    //     return axiosClient.post(url, data);\n    // },\n    login(data) {\n        const url = `auth/login`;\n        return axiosClient.post(url, data);\n    },\n    getUser(token) {\n        const url = 'users/me';\n        return axiosClient.get(url, {\n            headers: {\n                Authorization: 'Bearer' + token,\n            },\n        });\n    }\n};\n\nexport default userApi;","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    isLoading: false,\n    isAuth: false,\n    error: '',\n    access_token: {}\n};\n\nconst loginSlice = createSlice({\n    name: 'login',\n    initialState,\n    reducers: {\n        loginProcess: (state) => {\n            state.isLoading = true;\n        },\n        loginSuccess: (state, payload ) => {\n            state.isLoading = false;\n            state.isAuth = true;\n            state.error = '';\n            state.access_token = payload;\n        },\n        loginFail: (state, payload ) => {\n            state.isLoading = false;\n            state.error = payload;\n        }\n    }\n});\n\nconst { reducer, actions } = loginSlice;\n\nexport const { loginProcess, loginSuccess, loginFail } = actions;\n\nexport default reducer;","import userApi from '../../api/userApi';\nimport { loginProcess, loginSuccess, loginFail } from '../loginSlice';\nimport { setToken, setTokenType } from '../../utils/localStorageHandle';\n\nexport const userLogin = (data) => (dispatch) => {\n    dispatch(loginProcess());\n\n    userApi.login(data)\n        .then(res => {\n            // const resp = res.data;\n            console.log('response:', res);\n            dispatch(loginSuccess(res));\n            setToken(res.token);\n            // setTokenType(resp.token_type);\n            window.location = '/';\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch(loginFail('Tài khoản hoặc mật khẩu không chính xác'));\n        });\n};\n","export const setToken = (token) => {\n    localStorage.setItem('token', token);\n};\n\nexport const setTokenType = (token_type) => {\n    localStorage.setItem('token_type', token_type);\n};\n\nexport const getToken = (token) => {\n    return localStorage.getItem('token');\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Form, Input, Button, Checkbox, Row } from 'antd';\nimport { userLogin } from '../../../../redux/actions/userLogin';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction FormLogin() {\n    const dispatch = useDispatch();\n\n    const localRmb = localStorage.getItem('remember_me');\n    const localEmp = localStorage.getItem('username');\n    const localPass = localStorage.getItem('password') ? window.atob(localStorage.getItem('password')) : null;\n    const initialValues = {\n        remember_me: localRmb,\n        username: localEmp ? localEmp : '',\n        password: localPass ? localPass : '',\n    };\n\n    const rules = {\n        username: [{\n            required: true,\n            whitespace: true,\n            message: 'Please enter username'\n        }],\n        password: [{\n            required: true,\n            message: 'Please enter password',\n        }]\n    };\n\n    const { error } = useSelector(state => state.login);\n\n    const onFinish = (values) => {\n        console.log('Get form Login:', values);\n        const { username, password, remember_me } = values;\n        if (remember_me && username !== '') {\n            localStorage.setItem('username', username);\n            localStorage.setItem('password', window.btoa(password));\n            localStorage.setItem('remember_me', remember_me);\n        } else {\n            localStorage.setItem('username', '');\n            localStorage.setItem('password', '');\n            localStorage.setItem('remember_me', '');\n        }\n        dispatch(userLogin({ username, password }));\n    };\n\n    return (\n        <Form\n            name=\"basic\"\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            initialValues={initialValues}\n            onFinish={onFinish}\n            // onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={rules.username}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={rules.password}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            {error && <Alert message={error} type='error' />}\n\n            <Form.Item name=\"remember_me\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n                <Checkbox checked={localRmb}>Remember me</Checkbox>\n            </Form.Item>\n\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default FormLogin;","import { Col, Row, Typography } from 'antd';\nimport React from 'react';\nimport FormLogin from '../../component/FormLogin'\n\nLogin.propTypes = {\n\n};\n\nfunction Login(props) {\n    return (\n        <div>\n            <h1 className=\"center\">Login</h1>\n            <Row justify=\"center\">\n                <Col xl={6}>\n                    <FormLogin></FormLogin>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nNotFound.propTypes = {\n\n};\n\nfunction NotFound(props) {\n    return (\n        <div>\n            <h1>NOT FOUND</h1>\n        </div>\n    );\n}\n\nexport default NotFound;","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Navbar, Products } from './components';\nimport Login from './features/Auth/page/Login';\nimport NotFound from './components/NotFound';\nimport { commerce } from './lib/commerce';\nimport './App.css'\n\nconst App = () => {\n    // const [products, setProducts] = useState([]);\n\n    // const [cart, setCart] = useState({});\n\n    // const fetchProducts = async () => {\n    //     const { data } = await commerce.products.list();\n\n    //     setProducts(data);\n    // }\n\n    // const fetchCart = async () => {\n    //     setCart(await commerce.cart.retrieve());\n    // }\n\n    // const handleAddToCart = async (productId, quantity) => {\n    //     const item = await commerce.cart.add(productId, quantity);\n\n    //     setCart(item.cart);\n    // };\n\n    // useEffect(() => {\n    //     fetchProducts();\n    //     fetchCart();\n    // }, []);\n\n    // console.log(cart);\n\n    return (\n        <div className=\"app\">\n            <Switch>\n                <Route path='/login' component={Login} exact/>\n                <Route component={NotFound} />\n            </Switch>\n            {/* <Navbar totalItems={cart.total_items}></Navbar>\n            <Products products={products} onAddToCart={handleAddToCart}></Products> */}\n        </div>\n    )\n}\n\nexport default App\n","import { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport loginReducer from '../redux/loginSlice';\n// import userReducer from '../redux/userSlice';\n// import orderReducers from '../redux/reducers/orders';\n// import paymentMethodReducers from '../redux/reducers/paymentMethod';\n// import paymentStatusReducers from '../redux/reducers/paymentStatus';\n// import storesReducers from '../redux/reducers/stores';\n// import deliveryByReducers from '../redux/reducers/deliveryBy';\n// import phoneNumberReducers from '../redux/reducers/phoneNumber';\n// import skuReducers from '../redux/reducers/sku';\n// import detailReducer from '../redux/reducers/detailSlice';\n// import paymentReducer from '../redux/reducers/paymentSlice';\n// import otherAddressReducer from '../redux/reducers/otherAddress';\n// import stocksReducers from '../redux/reducers/checkStocks';\n// import serviceReducer from '../redux/reducers/serviceSlice';\n// import deliveryReducer from '../redux/reducers/deliverySlice';\n// import syncReducer from '../redux/reducers/sync';\n\n\nconst { configureStore, combineReducers } = require('@reduxjs/toolkit');\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    // user: userReducer,\n    // orders: orderReducers,\n    // paymentMethod: paymentMethodReducers,\n    // paymentStatus: paymentStatusReducers,\n    // stores: storesReducers,\n    // deliveryBy: deliveryByReducers,\n    // phoneNumber: phoneNumberReducers,\n    // sku: skuReducers,\n    // detail: detailReducer,\n    // payment: paymentReducer,\n    // otherAddress: otherAddressReducer,\n    // service: serviceReducer,\n    // delivery: deliveryReducer,\n    // stocks: stocksReducers,\n    // sync: syncReducer\n});\n\nconst middleware = [thunk];\n\nconst store = configureStore(\n    {\n        reducer: rootReducer\n    },\n    applyMiddleware(...middleware)\n);\n\nexport default store;","import 'antd/dist/antd.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './app/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}